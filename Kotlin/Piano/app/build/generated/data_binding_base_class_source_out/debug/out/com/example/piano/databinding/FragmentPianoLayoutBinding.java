// Generated by view binder compiler. Do not edit!
package com.example.piano.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.piano.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPianoLayoutBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final EditText fileNameInput;

  @NonNull
  public final LinearLayout layoutforblackpianokeys;

  @NonNull
  public final LinearLayout layoutforwhitepianokeys;

  @NonNull
  public final Button savingthenotesheetButton;

  @NonNull
  public final Button startStopRecordingButton;

  @NonNull
  public final Chronometer timerecorderChronometer;

  private FragmentPianoLayoutBinding(@NonNull FrameLayout rootView, @NonNull EditText fileNameInput,
      @NonNull LinearLayout layoutforblackpianokeys, @NonNull LinearLayout layoutforwhitepianokeys,
      @NonNull Button savingthenotesheetButton, @NonNull Button startStopRecordingButton,
      @NonNull Chronometer timerecorderChronometer) {
    this.rootView = rootView;
    this.fileNameInput = fileNameInput;
    this.layoutforblackpianokeys = layoutforblackpianokeys;
    this.layoutforwhitepianokeys = layoutforwhitepianokeys;
    this.savingthenotesheetButton = savingthenotesheetButton;
    this.startStopRecordingButton = startStopRecordingButton;
    this.timerecorderChronometer = timerecorderChronometer;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPianoLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPianoLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_piano_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPianoLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fileNameInput;
      EditText fileNameInput = rootView.findViewById(id);
      if (fileNameInput == null) {
        break missingId;
      }

      id = R.id.layoutforblackpianokeys;
      LinearLayout layoutforblackpianokeys = rootView.findViewById(id);
      if (layoutforblackpianokeys == null) {
        break missingId;
      }

      id = R.id.layoutforwhitepianokeys;
      LinearLayout layoutforwhitepianokeys = rootView.findViewById(id);
      if (layoutforwhitepianokeys == null) {
        break missingId;
      }

      id = R.id.savingthenotesheetButton;
      Button savingthenotesheetButton = rootView.findViewById(id);
      if (savingthenotesheetButton == null) {
        break missingId;
      }

      id = R.id.startStopRecordingButton;
      Button startStopRecordingButton = rootView.findViewById(id);
      if (startStopRecordingButton == null) {
        break missingId;
      }

      id = R.id.timerecorderChronometer;
      Chronometer timerecorderChronometer = rootView.findViewById(id);
      if (timerecorderChronometer == null) {
        break missingId;
      }

      return new FragmentPianoLayoutBinding((FrameLayout) rootView, fileNameInput,
          layoutforblackpianokeys, layoutforwhitepianokeys, savingthenotesheetButton,
          startStopRecordingButton, timerecorderChronometer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
